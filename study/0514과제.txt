## 과제 (메일 한개에 다보내기), 글씨 잘보이게 + 첨부파일 x
Instance Normalization, Batch Normalization, Layer Normalization
공분산, 공분산 행렬, 상관계수, 
표준 정규분포(1,2,3,4,5 가지고 설명)/평균, 편차, 분산, 표준편차
파이썬의 오버로딩, 그외 오버라이딩 + 예제(오버로딩만)
#####    

## 개인 궁금 ##
# Standardization / Normalization / Regularization
Standardization,              Normalization,                        Regularization
표준화,	                    정규화          ,                        규제
평균0 표준편차1로 만듬 / 데이터를 특정구간으로 조정   /  과적합 방지를 위해 복잡성 제한. L1규제와 L2규제가 있음
                                   ex) minmax                         
L1은 가중치 값들의 합을 최소화. 일부 가중치가 0이 될수도 있어 특징선택 효과가 있음.
L2는 가중치 값들의 제곱 합을 최소화. 단순히 수치를 줄여 복잡성을 줄임

# Pixel Normlization  
PGGAN에서의 Pixel Normalization은 일반적인 이미지 정규화 방법과는 다르며, 
네트워크의 각 레이어에서 활성화 값을 정규화하여 학습을 안정화시키고, 
작은 배치 크기에서도 효과적으로 작동하도록 설계되었음

#################


# 1. Instance Normalization, Batch Normalization, Layer Normalization

1) Instance Normalization
각 샘플의 채널별로 정규화 하는 방법
각 샘플의 개별 통계를 사용합니다

2) Batch Normalization
각 미니배치 끼리 정규화를 진행하는 방법
미니배치 내의 통계치를 사용함

3) Layer Normalization 
각 레이어의 출력 전체를 정규화
배치 크기에 독립적. 순차 데이터와 RNN에 적합.


# 2. 공분산, 공분산 행렬, 상관 계수

1) 공분산
두 "변수" 간의 변동 관계를 나타내며, 공분산이 양수이면 같은 방향으로, 음수이면 반대 방향으로 변함
양의 공분산은 양의 상관관계가 있다고 표현하고 음의 공분산은 음의 상관관계가 있다고 표현함
아무런 관계가 없다면 0에 가까운 값을 가짐
즉 두 변수간의 관계가 비례관계라면 양수를, 반비례 관계라면 음수값을 가지며 
양수던 음수던 절댓값의 수치가 높을수록 관계가 높다는 뜻임

각 변수의 평균을 구함 -> 각 값에서 평균을 뺀 편차를 계산 -> 두 변수의 편차를 곱한 값을 모두 더하고 값의 개수로 나눔 = 공분산


2) 공분산 행렬
여러 변수 간의 공분산을 행렬 형태로 나타낸 것으로, 변수들 간의 분산과 공분산을 종합적으로 보여줌
다변량 데이터의 분포와 변수간의 관계를 이해하는데 유용함
공분산 행렬은 대칭행렬로, 주 대각선 요소는 각 변수의 분산(자기 자신과의 공분산)을 나타내고, 
나머지 요소는 서로 다른 변수들간의 공분산을 나타냄

[이미지1]
ex) 시험 성적(X), 공부 시간(Y), 수면 시간(Z)
[이미지2]

주 대각선 요소 Var(X), Var(Y), Var(Z)
Var(X) = 12.5 : 시험 성적 X 의 분산
Var(Y) = 6.3 : 공부 시간 Y 의 분산
Var(Z) = 3.5 : 수면 시간 Z 의 분산

비 대각선 요소 Cov(X,Y), Cov(X,Z), Cov(Y,Z)
Cov(X,Y) = 10.2 : 시험성적과 공부시간 간의 공분산
Cov(X,Z) = -4.3 : 시험성적과 수면시간 간의 공분산
Cov(Y,Z) = -2.1 : 공부시간과 수면시간 간의 공분산

이렇게 상관 관계를 한눈에 볼 수 있도록 함.
비 대각선 위치에서 직선으로 뻗어나가는 두 변수간의 공분산을 나타냄.
Cov(행,열) 의 공식으로 표현함.
Cov(A,B) 와 Cov(B,A) 는 같은 값을 가짐

3) 상관 계수
두 변수 간의 선형 관계의 강도와 방향을 나타내며, -1에서 1 사이의 값을 가짐
공분산을 각 변수의 표준 편차로 나누어 정규화한 값

상관계수가 1이면 두 변수가 완벽히 비례하는 관계이다
상관계수가 -1이면 두 변수가 완벽히 반비례하는 관계이다
상관계수가 0이면 두 변수간에 선형적인 관계가 없음을 뜻함


# 3. 정규분포
1) 평균 
데이터의 중앙값. 모든값의 합을 데이터 갯수로 나누면 나온다.
[1+2+3+4+5 / 5 = 3]

2) 편차
데이터에서 평균을 뺀 값이다. 얼마나 값이 흩어져 있는지 알기 위해 나타냈다
평균이 0이 될수 밖에 없는 구조이기 때문에 표준편차를 사용하게 됐다
[-2, -1, 0, 1, 2]

3) 분산
각 데이터가 평균에서 얼마나 떨어져있는지를 나타내는값이다
각 데이터에 평균을 뺀값을 제곱하여 합한 후 데이터 갯수로 나눈다
[(1-3)^2 + (2-3)^2 + (3-3)^2 + (4-3)^2 + (5-3)^2 / 5 = 2]

4) 표준편차
표준편차는 분산의 제곱근을 취한 값으로 평균적으로 얼마나 떨어져있는지 직관적으로 이해할 수 있게 해준다.
분산에 루트를 씌우면 표준편차
[2 제곱근 = 1.41321...]

5) 정규분포
데이터가 평균을 중심으로 좌우 대칭을 이루는 모양을 가지는 분포
표준 정규분포는 평균이 0이고 표준편차가 1인 정규분포를 말한다
[(1,2,3,4,5)를 가지고 분포표를 만들면 정규분포 형태이다]
[표준 정규분포는 이미지로 넣자]


# 4. 파이썬의 오버라이딩, 그외 오버로딩 + 예제(오버라이딩만)

1) 오버로딩
많은 것을 싣는다는 사전적 의미를 지님

같은 이름의 함수나 메소드를 여러개 정의하고
서도 다른 매개변수를 받아들일 수 있도록 하는것
함수나 메소드의 인자 수나 타입에 따라 다은 동작을 하도록 하는것
파이썬에서는 기본적으로 지원하지 않음


2) 오버라이딩
재정의 한다는 사전적 의미를 지님

상속 관계에서 부모 클래스에 정의된 메소드를 자식 클래스에서 재정의하는 것
자식 클래스가 부모 클래스의 메소드를 덮어쓰고, 자식 클래스에 맞게 메소드를 변경할 수 있도록함

예시) 
class Animal:
    def sound(self):
        return "Some generic animal sound"

class Dog(Animal):
    def sound(self):
        return "Bark"

class Cat(Animal):
    def sound(self):
        return "Meow"

# 객체 생성
animal = Animal()
dog = Dog()
cat = Cat()

# 메서드 호출
print(animal.sound())  # 출력: Some generic animal sound
print(dog.sound())     # 출력: Bark
print(cat.sound())     # 출력: Meow

예시를 보면 Animal class를 상속받은 Dog, Cat class 들이 sound 함수를 재정의 해서 사용하고 있다
모두 같은 sound 함수처럼 보이지만 자식 class인 Dog과 Cat 은 함수를 재정의 해서 부모 class인 Animal과 모두 다른 결과를 얻었다






